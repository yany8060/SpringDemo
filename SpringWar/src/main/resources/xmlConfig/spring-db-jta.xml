<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:/properties/dbconn.properties"/>

    <!--公有数据库连接池  -->
    <bean id="abstractXADataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
          init-method="init" destroy-method="close" abstract="true">
        <property name="xaDataSourceClassName"
                  value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
        <property name="poolSize" value="10"/>
        <property name="minPoolSize" value="10"/>
        <property name="maxPoolSize" value="30"/>
        <!--获取连接失败重新获等待最大时间，在这个时间内如果有可用连接，将返回-->
        <property name="borrowConnectionTimeout" value="60"/>
        <!--最大获取数据时间，如果不设置这个值，Atomikos使用默认的5分钟，那么在处理大批量数据读取的时候，一旦超过5分钟，就会抛出类似 Resultset is close 的错误.-->
        <property name="reapTimeout" value="20000"/>
        <!-- 最大空闲时间 -->
        <property name="maxIdleTime" value="60"/>
        <!--连接回收时间-->
        <property name="maintenanceInterval" value="60"/>
        <!--java数据库连接池，最大可等待获取datasouce的时间-->
        <property name="loginTimeout" value="60"/>
        <property name="testQuery">
            <value>select 1</value>
        </property>
    </bean>

    <bean id="adsDataSource" parent="abstractXADataSource">
        <property name="uniqueResourceName" value="mysql/adsDataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${ads.jdbc.url}</prop>
                <prop key="user">${ads.jdbc.username}</prop>
                <prop key="password">${ads.jdbc.password}</prop>
                <prop key="pinGlobalTxToPhysicalConnection">true</prop>
            </props>
        </property>
    </bean>
    <bean id="adsJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="adsDataSource"/>
    </bean>

    <bean id="rdsDataSource" parent="abstractXADataSource">
        <property name="uniqueResourceName" value="mysql/rdsDataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${rds.jdbc.url}</prop>
                <prop key="user">${rds.jdbc.username}</prop>
                <prop key="password">${rds.jdbc.password}</prop>
                <prop key="pinGlobalTxToPhysicalConnection">true</prop>
            </props>
        </property>
    </bean>

    <bean id="rdsJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="rdsDataSource"/>
    </bean>

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init"
          destroy-method="close">
        <property name="forceShutdown">
            <value>true</value>
        </property>
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300"/>
    </bean>


    <!-- spring 事务管理器 -->
    <bean id="springJTATransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager">
            <ref bean="atomikosTransactionManager"/>
        </property>
        <property name="userTransaction">
            <ref bean="atomikosUserTransaction"/>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="springJTATransactionManager"/>



</beans>